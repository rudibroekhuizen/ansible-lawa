---
- name: lawa
  hosts: lawa_prd
  gather_facts: true
  become: true
  vars:
    app_name: lawa
  tasks:
    - name: Mount data volume
      ansible.builtin.import_tasks: mount.yml
      tags:
        - mount

    - name: Install docker
      ansible.builtin.import_tasks: install_docker.yml
      tags:
        - docker

    - name: Create folders to hold data volumes
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - /data/clickhouse
        - /data/postgres

    - name: Create docker compose directory and files
      block:
        - name: Ensure directory structure exists
          ansible.builtin.file:
            path: '/opt/docker/{{ app_name }}/{{ item.path }}'
            state: directory
            mode: "0755"
          with_community.general.filetree: "templates/docker/{{ app_name }}"
          when:
            - item.state == "directory"

        - name: Ensure files are populated from files
          ansible.builtin.copy:
            src: "{{ item.src }}"
            dest: "/opt/docker/{{ app_name }}/{{ item.path }}"
            mode: "0644"
            remote_src: false
          with_community.general.filetree: "templates/docker/{{ app_name }}"
          when:
            - item.state == "file"
            - item.path | basename | splitext | last != ".j2"

        - name: Ensure files are populated from templates
          ansible.builtin.template:
            src: "{{ item.src }}"
            dest: "/opt/docker/{{ app_name }}/{{ item.path | splitext | first }}"
            mode: "0644"
          with_community.general.filetree: "templates/docker/{{ app_name }}"
          when:
            - item.state == "file"
            - item.path | basename | splitext | last == ".j2"

      tags:
        - templates_and_files

    - name: Tear down existing services
      community.docker.docker_compose_v2:
        project_src: "/opt/docker/{{ app_name }}"
        state: absent
      register: result_tear_down

    #- name: Create and start services
    #  community.docker.docker_compose_v2:
    #    project_src: /opt/docker/app1
    #  register: result_start

    - name: Show results
      ansible.builtin.debug:
        var: result_start
...

